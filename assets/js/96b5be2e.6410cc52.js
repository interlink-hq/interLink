"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4006],{943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(5893),i=n(1151);const a={sidebar_position:5},r="InterLink Monitoring System",o={id:"guides/monitoring",title:"InterLink Monitoring System",description:"Description",source:"@site/versioned_docs/version-0.4.x/guides/05-monitoring.md",sourceDirName:"guides",slug:"/guides/monitoring",permalink:"/interLink/docs/guides/monitoring",draft:!1,unlisted:!1,editUrl:"https://github.com/interlink-hq/interLink/versioned_docs/version-0.4.x/guides/05-monitoring.md",tags:[],version:"0.4.x",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Configure OpenID connect identity providers",permalink:"/interLink/docs/guides/oidc-IAM"},next:{title:"Enable service accounts",permalink:"/interLink/docs/guides/enable-service-accounts"}},d={},l=[{value:"Description",id:"description",level:2},{value:"Monitoring System Components",id:"monitoring-system-components",level:2},{value:"Grafana Tempo",id:"grafana-tempo",level:3},{value:"Grafana",id:"grafana",level:3},{value:"VK tracing",id:"vk-tracing",level:2},{value:"Installation",id:"installation",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"interlink-monitoring-system",children:"InterLink Monitoring System"}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"To monitor the InterLink stack, you can use an helm chart that deploys the\nentire stack and components needed for monitoring the Interlink components, in\nparticular the Virtual Kubelet (VK) of the Interlink project. In the near\nfuture, the monitoring system will be extended to monitor other components of\nthe Interlink project."}),"\n",(0,s.jsx)(t.h2,{id:"monitoring-system-components",children:"Monitoring System Components"}),"\n",(0,s.jsx)(t.p,{children:"The monitoring system is composed of the following two components:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://grafana.com/docs/tempo/latest/",children:"Grafana Tempo"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://grafana.com",children:"Grafana"})}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"grafana-tempo",children:"Grafana Tempo"}),"\n",(0,s.jsxs)(t.p,{children:["Grafana Tempo (or simply ",(0,s.jsx)(t.strong,{children:"Tempo"}),") is an open-source distributed tracing\nbackend developed by Grafana Labs designed to handle high-scale and high-volume\ndistributed tracing data. The choice of Tempo was made because of its key\nfeatures:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Scalability"}),": Tempo is designed to scale horizontally and handle millions\nof spans (a span is a single operation in a trace) per second. Moreover, it is\ncapable of storing traces without requiring a database, instead leveraging\nobject storage."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Simplicity"}),": Tempo does not index traces because it relies Grafana for\nquerying and visualizing traces. This approach reduces complexity and\noperational overhead."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Cost"}),": Tempo is cost-effective because it uses object storage for storing\ntraces, which is cheaper than traditional databases."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Integration"}),": Tempo integrates with popular tracing protocols. One of them\nis OpenTelemetry, which is used by the Virtual Kubelet (VK) of the Interlink\nproject."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Querying"}),": Tempo provides a query language that allows users to filter and\naggregate traces. It also supports distributed sampling, which allows users to\nsample traces across services. The powerful query language is a key feature\nthat enables users to extract insights from traces and it is one of the main\nreasons why Tempo was chosen for the monitoring system."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"grafana",children:"Grafana"}),"\n",(0,s.jsx)(t.p,{children:"Grafana is an open-source platform for monitoring and observability that allows\nusers to query, visualize, alert on, and understand metrics no matter where they\nare stored. It is used to create, explore, and share dashboards with teams and\nstakeholders. Grafana supports a wide range of data sources, including Tempo."}),"\n",(0,s.jsx)(t.h2,{id:"vk-tracing",children:"VK tracing"}),"\n",(0,s.jsxs)(t.p,{children:["The Virtual Kubelet (VK) of the Interlink project is instrumented with\n",(0,s.jsx)(t.strong,{children:"OpenTelemetry"})," to generate traces. OpenTelemetry is an open-source\nobservability framework that provides APIs, libraries, agents, and\ninstrumentation to collect telemetry data from applications and services. The\ntraces generated by the VK are sent to Tempo, where they are stored and queried.\nTraces are generated by the VK when a request is made to the VK, and they\ncontain information about the request, such as the details of the operation, the\nduration of the operation, and the services involved in the operation. A trace\nis a collection of spans, where each span represents a single operation in the\ntrace. Spans are linked together to form a trace, which provides a complete view\nof the flow and performance of the operation. A span contains metadata, such as\nthe name of the operation, the start and end time of the operation, and the\nservice that generated the span."]}),"\n",(0,s.jsx)(t.p,{children:"The flow is represented in the following image:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Monitoring flow",src:n(5661).Z+"",width:"1985",height:"1216"})}),"\n",(0,s.jsx)(t.p,{children:"In the actual setup, Tempo is deployed in the same Kubernetes cluster as the VK.\nThanks to a Kubernetes service, the VK can send traces to Tempo. No TLS is used\nfor the communication between the VK and Tempo, as the communication is internal\nto the cluster. In the near future, the communication between the VK and Tempo\nwill be secured using TLS if Tempo is deployed outside the cluster and a proxy\nwill be used to authenticate the VK with Tempo."}),"\n",(0,s.jsx)(t.p,{children:"The following table is a list of spans generated by the VK:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Span Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Attributes"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"CreateHttpCall"}),(0,s.jsx)(t.td,{children:"Span that represents the HTTP call made by the VK to the Interlink API to create a pod."}),(0,s.jsx)(t.td,{children:"pod.name, pod.namespace, start.timestamp, end.timestamp, duration, exitc.code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DeleteHttpCall"}),(0,s.jsx)(t.td,{children:"Span that represents the HTTP call made by the VK to the Interlink API to delete a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration, exitc.code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"StatusHttpCall"}),(0,s.jsx)(t.td,{children:"Span that represents the HTTP call made by the VK to the Interlink API to get the status of a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration, exitc.code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"LogHttpCall"}),(0,s.jsx)(t.td,{children:"Span that represents the HTTP call made by the VK to the Interlink API to get the logs of a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration, exitc.code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PingHttpCall"}),(0,s.jsx)(t.td,{children:"Span that represents the HTTP call made by the VK to the Interlink API check if the API is alive."}),(0,s.jsx)(t.td,{children:"start.timestamp, end.timestamp, duration, exitc.code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"CreatePodVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to create a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DeletePodVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to delete a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"UpdatePodVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to update a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPodVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to get a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPodStatusVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to get the status of a pod."}),(0,s.jsx)(t.td,{children:"pod.name pod.namespace, start.timestamp, end.timestamp, duration"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPodsVK"}),(0,s.jsx)(t.td,{children:"Span that represents the call made by the VK to the Kubernetes API to get all pods."}),(0,s.jsx)(t.td,{children:"start.timestamp, end.timestamp, duration"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(t.admonition,{title:"To Enable tracing for the Virtual Kubelet, you have to set the",type:"warning",children:[(0,s.jsxs)(t.p,{children:["Environment Variable ",(0,s.jsx)(t.code,{children:"ENABLE_TRACING"})," to 1 :::"]}),(0,s.jsxs)(t.p,{children:["A requirement for the monitoring system is to have Helm installed in your\nKubernetes cluster or in your local machine. If you don't have Helm installed,\nyou can follow the instructions in the following\n",(0,s.jsx)(t.a,{href:"https://helm.sh/docs/intro/install/",children:"link"})]}),(0,s.jsx)(t.p,{children:"This helm chart requires a NGINX Ingress Controller to be installed in the\ncluster in order to expose the services and access them from outside the\ncluster. In particular, the Grafana service is exposed using an Ingress\nresource."}),(0,s.jsx)(t.p,{children:"To install the monitoring system, follow the steps below:"}),(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Clone the repository:"}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/interlink-hq/interlink-monitoring-stack\n"})}),(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["Change the values in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file to match your environment."]}),"\n",(0,s.jsx)(t.li,{children:"Create a namespace for the monitoring system using the following command:"}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl create namespace interlink-mon\n"})}),(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsx)(t.li,{children:"Install the monitoring system using the following command:"}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"helm upgrade --install helm-vk-monitoring-release interlink-monitoring-stack/ -n interlink-mon --debug\n"})}),(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Deploy (or re-deploy) your Virtual Kubelet stack setting the\n",(0,s.jsx)(t.code,{children:"TELEMETRY_ENDPOINT"})," Environment Variable to your actual endpoint. If not\nset, it defaults to ",(0,s.jsx)(t.code,{children:"localhost:4317"}),". Remember to enable the monitoring by\nalso setting ",(0,s.jsx)(t.code,{children:"ENABLE_TRACING"})," to 1. If you are using an external Tempo\ninstance which is not in the same cluster as the VK and mutual TLS is\nenabled, you have to set the ",(0,s.jsx)(t.code,{children:"TELEMETRY_CA_CRT_FILEPATH"})," that points to the\nCA certificate file used by Tempo to sign the certificates, the\n",(0,s.jsx)(t.code,{children:"TELEMETRY_CLIENT_KEY_FILEPATH"})," that points to the client key file used by\nthe VK to authenticate itself to Tempo and the\n",(0,s.jsx)(t.code,{children:"TELEMETRY_CLIENT_CRT_FILEPATH"})," that points to the client certificate file\nused by the VK to authenticate itself to Tempo. Finally, if the TLS\ncertificate on Tempo are not verfied by unknown authorities, you can set the\n",(0,s.jsx)(t.code,{children:"TELEMETRY_INSECURE_SKIP_VERIFY"})," to true."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Access Grafana dashboard through the domain you defined in the ",(0,s.jsx)(t.code,{children:"values.yaml"}),"\nfile with the credentials you defined in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file."]}),"\n"]}),"\n"]}),(0,s.jsx)(t.p,{children:"The following image shows the Grafana dashboard:"}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Grafana Dashboard",src:n(1341).Z+"",width:"2880",height:"6440"})})]})]})}function c(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1341:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/dashboard-a7ff7dfccf891fa676573d512c346d5e.png"},5661:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/vk_tracing-db77533d60f4352b234b2a39d0ba1b80.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(7294);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);