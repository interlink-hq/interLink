"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4066],{1108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(5893),s=t(1151);const o={sidebar_position:5},l="Developers guide",r={id:"Developers",title:"Developers guide",description:"Here you can find how to test a virtual kubelet implementation against the main",source:"@site/versioned_docs/version-0.5.x/Developers.md",sourceDirName:".",slug:"/Developers",permalink:"/interLink/docs/Developers",draft:!1,unlisted:!1,editUrl:"https://github.com/interlink-hq/interLink/versioned_docs/version-0.5.x/Developers.md",tags:[],version:"0.5.x",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Enable service accounts",permalink:"/interLink/docs/guides/enable-service-accounts"},next:{title:"Current limitations",permalink:"/interLink/docs/Limitations"}},a={},c=[{value:"Requirements",id:"requirements",level:2},{value:"What&#39;s in the Dagger module",id:"whats-in-the-dagger-module",level:2},{value:"Usage",id:"usage",level:2},{value:"Run e2e tests",id:"run-e2e-tests",level:3},{value:"Edit manifests with your images",id:"edit-manifests-with-your-images",level:4},{value:"Start the local docker plugin service",id:"start-the-local-docker-plugin-service",level:4},{value:"Run the tests",id:"run-the-tests",level:4},{value:"Debug with interactive session",id:"debug-with-interactive-session",level:4},{value:"Debug from kubectl on your host",id:"debug-from-kubectl-on-your-host",level:4},{value:"Deploy on existing K8s cluster",id:"deploy-on-existing-k8s-cluster",level:3},{value:"Develop Virtual Kubelet code",id:"develop-virtual-kubelet-code",level:3},{value:"Develop Interlink API code",id:"develop-interlink-api-code",level:3},{value:"Develop your plugin",id:"develop-your-plugin",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"developers-guide",children:"Developers guide"}),"\n",(0,i.jsx)(n.p,{children:"Here you can find how to test a virtual kubelet implementation against the main\npod use cases we mean to support."}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"Docker engine"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.dagger.io/install/",children:"Dagger CLI v0.13.x"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"whats-in-the-dagger-module",children:"What's in the Dagger module"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"E2e integration tests: a reproducible test environment (selfcontained in\nDagger runtime). Run the very same tests executed by github actions to\nvalidate any PR"}),"\n",(0,i.jsx)(n.li,{children:"A development setup tool: optionally you can use your k8s cluster of choice to\nrun and install different interlink components via this module."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," by default the docker plugin is the one tested and to be referred to\nfor any change as first thing."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["The whole test suite is based on the application of k8s manifests inside a\nfolder that must be passed at runtime. In ",(0,i.jsx)(n.code,{children:"./ci/manifests"})," of this repo you can\nfind the one executed by default by the github actions."]}),"\n",(0,i.jsxs)(n.p,{children:["That means you can test your code ",(0,i.jsx)(n.strong,{children:"before"})," any commit, discovering in advance\nif anything is breaking."]}),"\n",(0,i.jsx)(n.h3,{id:"run-e2e-tests",children:"Run e2e tests"}),"\n",(0,i.jsxs)(n.p,{children:["The easiest way is to simply run ",(0,i.jsx)(n.code,{children:"make test"})," from the root folder of interlink.\nBut if you need to debug or understand further the test utility or a plugin, you\nshould follow these instructions."]}),"\n",(0,i.jsx)(n.h4,{id:"edit-manifests-with-your-images",children:"Edit manifests with your images"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"service-account.yaml"})," is the default set of permission needed by the\nvirtualkubelet. Do not touch unless you know what you are doing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"virtual-kubelet-config.yaml"})," is the configuration mounted into the ",(0,i.jsx)(n.strong,{children:"virtual\nkubelet"})," component to determine its behaviour."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"virtual-kubelet.yaml"})," is the one that you should touch if you are pointing to\ndifferent interlink endpoints or if you want to change the ",(0,i.jsx)(n.strong,{children:"virtual kubelet"}),"\nimage to be tested."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"interlink-config.yaml"})," is the configuration mounted into the ",(0,i.jsx)(n.strong,{children:"interlink\nAPI"})," component to determine its behaviour."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"interlink.yaml"})," is the one that you should touch if you are pointing to\ndifferent plugin endpoints or if you want to change the ",(0,i.jsx)(n.strong,{children:"interlink API"}),"\nimage to be tested."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plugin-config.yaml"})," is the configuration for the ",(0,i.jsx)(n.strong,{children:"interLink plugin"}),"\ncomponent that you MUST TO START MANUALLY on your host.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"we do have solution to make it start inside dagger environment, but is not\ndocumented yet."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"start-the-local-docker-plugin-service",children:"Start the local docker plugin service"}),"\n",(0,i.jsx)(n.p,{children:"For a simple demonstration, you can use the plugin that we actually use in are\nGithub Actions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/interlink-hq/interlink-docker-plugin/releases/download/0.0.24-no-gpu/docker-plugin_Linux_x86_64 -O docker-plugin \\\n  && chmod +x docker-plugin \\\n  && docker ps \\\n  && export INTERLINKCONFIGPATH=$PWD/ci/manifests/plugin-config.yaml \\\n  && ./docker-plugin\n"})}),"\n",(0,i.jsx)(n.h4,{id:"run-the-tests",children:"Run the tests"}),"\n",(0,i.jsx)(n.p,{children:"Then, in another terminal sessions you are ready to execute the e2e tests with\nDagger."}),"\n",(0,i.jsxs)(n.p,{children:["First of all, in ",(0,i.jsx)(n.code,{children:"ci/manifests/vktest_config.yaml"})," you will find the pytest\nconfiguration file. Please see the\n",(0,i.jsx)(n.a,{href:"https://github.com/interlink-hq/vk-test-set/tree/main",children:"test documentation"})," for\nunderstanding how to tweak it."]}),"\n",(0,i.jsxs)(n.p,{children:["The following instructions are thought for building docker images of the\nvirtual-kubelet and interlink api server components at runtime and published on\n",(0,i.jsx)(n.code,{children:"virtual-kubelet-ref"})," and ",(0,i.jsx)(n.code,{children:"interlink-ref"})," repositories (in this example it will\nbe dockerHUB repository of the dciangot user). It basically consists on a chain\nof Dagger tasks for building core images (",(0,i.jsx)(n.code,{children:"build-images"}),"), creating the\nkubernetes environment configured with core components (",(0,i.jsx)(n.code,{children:"new-interlink"}),"),\ninstalling the plugin of choice indicated in the ",(0,i.jsx)(n.code,{children:"manifest"})," folder\n(",(0,i.jsx)(n.code,{children:"load-plugin"}),"), and eventually the execution of the tests (",(0,i.jsx)(n.code,{children:"test"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["To run the default tests you can move to ",(0,i.jsx)(n.code,{children:"ci"})," folder and execute the Dagger\npipeline with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dagger call \\\n    --name my-tests \\\n  build-images \\\n  new-interlink \\\n    --plugin-endpoint tcp://localhost:4000 \\\n  test stdout\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," by default the docker plugin is the one tested and to be referred to\nfor any change as first thing."]}),"\n",(0,i.jsx)(n.p,{children:"In case of success the output should print something like the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"cachedir: .pytest_cache\nrootdir: /opt/vk-test-set\nconfigfile: pyproject.toml\ncollecting ... collected 12 items / 1 deselected / 11 selected\n\nvktestset/basic_test.py::test_namespace_exists[default] PASSED           [  9%]\nvktestset/basic_test.py::test_namespace_exists[kube-system] PASSED       [ 18%]\nvktestset/basic_test.py::test_namespace_exists[interlink] PASSED         [ 27%]\nvktestset/basic_test.py::test_node_exists[virtual-kubelet] PASSED        [ 36%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-000-hello-world.yaml] PASSED [ 45%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-010-simple-python.yaml] PASSED [ 54%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-020-python-env.yaml] PASSED [ 63%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-030-simple-shared-volume.yaml] PASSED [ 72%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-040-config-volumes.yaml] PASSED [ 81%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-050-limits.yaml] PASSED [ 90%]\nvktestset/basic_test.py::test_manifest[virtual-kubelet-060-init-container.yaml] PASSED [100%]\n\n====================== 11 passed, 1 deselected in 41.71s =======================\n"})}),"\n",(0,i.jsx)(n.h4,{id:"debug-with-interactive-session",children:"Debug with interactive session"}),"\n",(0,i.jsx)(n.p,{children:"In case something went wrong, you have the possibility to spawn a session inside\nthe final step of the pipeline to debug things:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dagger call \\\n    --name my-tests \\\n  build-images \\\n  new-interlink \\\n    --plugin-endpoint tcp://localhost:4000 \\\n  run terminal\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"with this command (after some minutes) then you should be able to access a bash\nsession doing the following commands:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bash\nsource .venv/bin/activate\nexport KUBECONFIG=/.kube/config\n\n## check connectivity with k8s cluster\nkubectl get pod -A\n\n## re-run the tests\npytest -vk 'not rclone'\n"})}),"\n",(0,i.jsx)(n.h4,{id:"debug-from-kubectl-on-your-host",children:"Debug from kubectl on your host"}),"\n",(0,i.jsx)(n.p,{children:"You can get the Kubernetes service running with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dagger call \\\n    --name my-tests \\\n  build-images \\\n  new-interlink \\\n    --plugin-endpoint tcp://localhost:4000 \\\n  kube up\n"})}),"\n",(0,i.jsx)(n.p,{children:"and then from another session, you can get the kubeconfig with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dagger call \\\n    --name my-tests \\\n  config export --path ./kubeconfig.yaml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"deploy-on-existing-k8s-cluster",children:"Deploy on existing K8s cluster"}),"\n",(0,i.jsx)(n.p,{children:"TBD"}),"\n",(0,i.jsx)(n.h3,{id:"develop-virtual-kubelet-code",children:"Develop Virtual Kubelet code"}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," Coming soon"]}),"\n",(0,i.jsx)(n.h3,{id:"develop-interlink-api-code",children:"Develop Interlink API code"}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," Coming soon"]}),"\n",(0,i.jsx)(n.h3,{id:"develop-your-plugin",children:"Develop your plugin"}),"\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," Coming soon"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var i=t(7294);const s={},o=i.createContext(s);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);