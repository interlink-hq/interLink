"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2157],{5304:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var t=i(5893),r=i(1151),s=i(4866),l=i(5162),o=i(9965),a=i(4996);const c={sidebar_position:3},d="Edge node deployment",h={id:"cookbook/edge",title:"Edge node deployment",description:"Deploy interLink on an edge node, outside the local K8S cluster.",source:"@site/versioned_docs/version-0.5.x/cookbook/1-edge.mdx",sourceDirName:"cookbook",slug:"/cookbook/edge",permalink:"/interLink/docs/0.5.x/cookbook/edge",draft:!1,unlisted:!1,editUrl:"https://github.com/interlink-hq/interLink/versioned_docs/version-0.5.x/cookbook/1-edge.mdx",tags:[],version:"0.5.x",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Cookbook",permalink:"/interLink/docs/0.5.x/category/cookbook"},next:{title:"In-cluster deployment",permalink:"/interLink/docs/0.5.x/cookbook/incluster"}},u={},p=[{value:"Install interLink",id:"install-interlink",level:2},{value:"Deploy Remote components",id:"deploy-remote-components",level:3},{value:"Interlink API server",id:"interlink-api-server",level:4},{value:"Authentication Methods",id:"authentication-methods",level:2},{value:"Option 1: OIDC Authentication (OAuth2 Proxy)",id:"option-1-oidc-authentication-oauth2-proxy",level:3},{value:"Option 2: mTLS Authentication (Mutual TLS)",id:"option-2-mtls-authentication-mutual-tls",level:3},{value:"Prerequisites for mTLS",id:"prerequisites-for-mtls",level:4},{value:"Generate Certificates for mTLS",id:"generate-certificates-for-mtls",level:4},{value:"Installation Instructions",id:"installation-instructions",level:2},{value:"OIDC Authentication Installation",id:"oidc-authentication-installation",level:3},{value:"mTLS Authentication Installation",id:"mtls-authentication-installation",level:3},{value:"Prepare Certificate Files",id:"prepare-certificate-files",level:4},{value:"Create mTLS Configuration",id:"create-mtls-configuration",level:4},{value:"Download and Configure interLink Binary",id:"download-and-configure-interlink-binary",level:4},{value:"Start interLink API Server",id:"start-interlink-api-server",level:4},{value:"Configure Virtual Kubelet for mTLS",id:"configure-virtual-kubelet-for-mtls",level:4},{value:"Create Kubernetes Secrets for Certificates",id:"create-kubernetes-secrets-for-certificates",level:4},{value:"mTLS Security Considerations",id:"mtls-security-considerations",level:4},{value:"mTLS Troubleshooting",id:"mtls-troubleshooting",level:4},{value:"Plugin service",id:"plugin-service",level:4},{value:"Systemd Service Configuration",id:"systemd-service-configuration",level:2},{value:"Create System User",id:"create-system-user",level:3},{value:"Copy Binaries and Configuration",id:"copy-binaries-and-configuration",level:3},{value:"OAuth2 Proxy Service",id:"oauth2-proxy-service",level:3},{value:"interLink API Server Service",id:"interlink-api-server-service",level:3},{value:"Plugin Service",id:"plugin-service-1",level:3},{value:"Log Rotation Configuration",id:"log-rotation-configuration",level:3},{value:"Service Management Commands",id:"service-management-commands",level:3},{value:"Service Operations",id:"service-operations",level:3},{value:"Monitoring and Health Checks",id:"monitoring-and-health-checks",level:3},{value:"Troubleshooting Systemd Issues",id:"troubleshooting-systemd-issues",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"3rd-party plugins",id:"3rd-party-plugins",level:5},{value:"Test interLink stack health",id:"test-interlink-stack-health",level:4},{value:"Deploy Kubernetes components",id:"deploy-kubernetes-components",level:3},{value:"For OIDC Authentication",id:"for-oidc-authentication",level:4},{value:"For mTLS Authentication",id:"for-mtls-authentication",level:4}];function m(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"edge-node-deployment",children:"Edge node deployment"}),"\n",(0,t.jsx)(n.p,{children:"Deploy interLink on an edge node, outside the local K8S cluster."}),"\n",(0,t.jsx)(o.Z,{alt:"Docusaurus themed image",sources:{light:(0,a.Z)("/img/scenario-1_light.svg"),dark:(0,a.Z)("/img/scenario-1_dark.svg")}}),"\n",(0,t.jsx)(n.h2,{id:"install-interlink",children:"Install interLink"}),"\n",(0,t.jsx)(n.h3,{id:"deploy-remote-components",children:"Deploy Remote components"}),"\n",(0,t.jsxs)(n.p,{children:["In general, starting from the deployment of the remote components is adviced.\nSince the kubernetes virtual node won't reach the ",(0,t.jsx)(n.code,{children:"Ready"})," status until all the\nstack is successfully deployed."]}),"\n",(0,t.jsx)(n.h4,{id:"interlink-api-server",children:"Interlink API server"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"For this deployment mode the remote host has to allow the kubernetes cluster\nto connect to the Oauth2 proxy service port (30443 if you use the automatic\nscript for installation)"})}),"\n",(0,t.jsx)(n.h2,{id:"authentication-methods",children:"Authentication Methods"}),"\n",(0,t.jsx)(n.p,{children:"interLink supports two primary authentication methods for secure communication between the Kubernetes cluster and the edge node:"}),"\n",(0,t.jsx)(n.h3,{id:"option-1-oidc-authentication-oauth2-proxy",children:"Option 1: OIDC Authentication (OAuth2 Proxy)"}),"\n",(0,t.jsx)(n.p,{children:"You first need to initialize an OIDC client with you Identity Provider (IdP)."}),"\n",(0,t.jsxs)(n.p,{children:["Since any OIDC provider working with\n",(0,t.jsx)(n.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/",children:"OAuth2 Proxy"})," tool will do the\nwork, we are going to put the configuration for a generic OIDC identity provider\nin this cookbook. Nevertheless you can find more detailed on dedicated pages\nwith instructions ready for\n",(0,t.jsx)(n.a,{href:"../guides/deploy-interlink#create-an-oauth-github-app",children:"GitHub"}),",\n",(0,t.jsx)(n.a,{href:"/interLink/docs/0.5.x/guides/oidc-IAM#egi-check-in",children:"EGI checkin"}),",\n",(0,t.jsx)(n.a,{href:"../guides/oidc-IAM#indigo-iam",children:"INFN IAM"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"option-2-mtls-authentication-mutual-tls",children:"Option 2: mTLS Authentication (Mutual TLS)"}),"\n",(0,t.jsx)(n.p,{children:"As an alternative to OIDC, you can use mutual TLS (mTLS) for authentication, which provides strong cryptographic authentication without requiring an external identity provider."}),"\n",(0,t.jsx)(n.h4,{id:"prerequisites-for-mtls",children:"Prerequisites for mTLS"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A Certificate Authority (CA) certificate"}),"\n",(0,t.jsx)(n.li,{children:"Server certificate and private key for the interLink API server"}),"\n",(0,t.jsx)(n.li,{children:"Client certificate and private key for the Virtual Kubelet"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate-certificates-for-mtls",children:"Generate Certificates for mTLS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Generate CA private key\nopenssl genrsa -out ca-key.pem 4096\n\n# Generate CA certificate\nopenssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem -subj "/C=US/ST=CA/L=San Francisco/O=InterLink/CN=InterLink CA"\n\n# Generate server private key\nopenssl genrsa -out server-key.pem 4096\n\n# Generate server certificate signing request\nopenssl req -subj "/C=US/ST=CA/L=San Francisco/O=InterLink/CN=interlink-server" -sha256 -new -key server-key.pem -out server.csr\n\n# Generate server certificate signed by CA\nopenssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -out server-cert.pem -extensions v3_req\n\n# Generate client private key\nopenssl genrsa -out client-key.pem 4096\n\n# Generate client certificate signing request\nopenssl req -subj "/C=US/ST=CA/L=San Francisco/O=InterLink/CN=interlink-client" -sha256 -new -key client-key.pem -out client.csr\n\n# Generate client certificate signed by CA\nopenssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -out client-cert.pem -extensions v3_req\n\n# Clean up CSR files\nrm server.csr client.csr\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"installation-instructions",children:"Installation Instructions"}),"\n",(0,t.jsx)(n.p,{children:"Choose one of the authentication methods above and follow the corresponding installation steps below."}),"\n",(0,t.jsx)(n.h3,{id:"oidc-authentication-installation",children:"OIDC Authentication Installation"}),"\n",(0,t.jsxs)(n.p,{children:["Then download the\n",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interLink/releases",children:"latest release"})," of the\ninterLink installer:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir -p $HOME/.interlink\nexport VERSION=$(curl -s https://api.github.com/repos/interlink-hq/interlink/releases/latest  | jq -r .name)\nwget -O $HOME/interlink-installer https://github.com/interlink-hq/interLink/releases/download/$VERSION/interlink-installer_Linux_x86_64\nchmod +x $HOME/.interlink/interlink-installer\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a template configuration with the init option:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir -p $HOME/.interlink/logs\nmkdir -p $HOME/.interlink/bin\nmkdir -p $HOME/.interlink/config\n$HOME/.interlink/interlink-installer --init --config $HOME/.interlink/installer.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The configuration file should be filled as followed. This is the case where the\n",(0,t.jsx)(n.code,{children:"my-node"})," will contact an edge service that will be listening on ",(0,t.jsx)(n.code,{children:"PUBLIC_IP"})," and\n",(0,t.jsx)(n.code,{children:"API_PORT"})," authenticating requests from an OIDC provider\n",(0,t.jsx)(n.code,{children:"https://my_oidc_idp.com"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="$HOME/.interlink/installer.yaml"',children:'interlink_ip: PUBLIC_IP\ninterlink_port: API_PORT\ninterlink_version: X.X.X\nkubelet_node_name: my-node\nkubernetes_namespace: interlink\nnode_limits:\n    cpu: "1000"\n    # MEMORY in GB\n    memory: 25600\n    pods: "100"\noauth:\n  provider: oidc\n  issuer: https://my_oidc_idp.com/\n  scopes:\n    - "openid"\n    - "email"\n    - "offline_access"\n    - "profile"\n  audience: interlink\n  grant_type: authorization_code\n  group_claim: groups\n  group: "my_vk_allowed_group"\n  token_url: "https://my_oidc_idp.com/token"\n  device_code_url: "https://my_oidc_idp/auth/device"\n  client_id: "oidc-client-xx"\n  client_secret: "xxxxxx"\ninsecure_http: true\n'})}),"\n",(0,t.jsx)(n.h3,{id:"mtls-authentication-installation",children:"mTLS Authentication Installation"}),"\n",(0,t.jsx)(n.p,{children:"For mTLS authentication, you don't need OAuth2 Proxy. Instead, configure interLink directly with TLS certificates."}),"\n",(0,t.jsx)(n.h4,{id:"prepare-certificate-files",children:"Prepare Certificate Files"}),"\n",(0,t.jsx)(n.p,{children:"First, copy your generated certificates to the appropriate locations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir -p $HOME/.interlink/certs\nmkdir -p $HOME/.interlink/config\nmkdir -p $HOME/.interlink/logs\nmkdir -p $HOME/.interlink/bin\n\n# Copy certificates (assuming you generated them as shown above)\ncp ca.pem server-cert.pem server-key.pem $HOME/.interlink/certs/\ncp ca.pem client-cert.pem client-key.pem $HOME/.interlink/certs/\n"})}),"\n",(0,t.jsx)(n.h4,{id:"create-mtls-configuration",children:"Create mTLS Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Create the interLink configuration file with mTLS settings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="$HOME/.interlink/config/InterLinkConfig.yaml"',children:'InterlinkAddress: https://0.0.0.0\nInterlinkPort: "3000"\nSidecarURL: http://plugin\nSidecarPort: "4000"\nVerboseLogging: true\nErrorsOnlyLogging: false\nDataRootFolder: "/tmp/interlink"\n\n# mTLS Configuration\nTLS:\n  Enabled: true\n  CertFile: "/home/myusername/.interlink/certs/server-cert.pem"\n  KeyFile: "/home/myusername/.interlink/certs/server-key.pem"\n  CACertFile: "/home/myusername/.interlink/certs/ca.pem"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"download-and-configure-interlink-binary",children:"Download and Configure interLink Binary"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export VERSION=$(curl -s https://api.github.com/repos/interlink-hq/interlink/releases/latest | jq -r .name)\nwget -O $HOME/.interlink/bin/interlink https://github.com/interlink-hq/interLink/releases/download/$VERSION/interlink_Linux_x86_64\nchmod +x $HOME/.interlink/bin/interlink\n"})}),"\n",(0,t.jsx)(n.h4,{id:"start-interlink-api-server",children:"Start interLink API Server"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start interLink API server with mTLS\nexport INTERLINKCONFIGPATH=$HOME/.interlink/config/InterLinkConfig.yaml\n$HOME/.interlink/bin/interlink &> $HOME/.interlink/logs/interlink.log &\necho $! > $HOME/.interlink/interlink.pid\n"})}),"\n",(0,t.jsx)(n.h4,{id:"configure-virtual-kubelet-for-mtls",children:"Configure Virtual Kubelet for mTLS"}),"\n",(0,t.jsx)(n.p,{children:"For the Kubernetes side (Virtual Kubelet), you'll need to configure it to use client certificates. This configuration will be used when setting up the Helm chart:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="mTLS values for Helm chart"',children:'virtualkubelet:\n  config:\n    InterlinkURL: https://PUBLIC_IP  # Your edge node IP\n    InterlinkPort: "3000"\n    TLS:\n      Enabled: true\n      CertFile: "/etc/vk/certs/client-cert.pem"\n      KeyFile: "/etc/vk/certs/client-key.pem" \n      CACertFile: "/etc/vk/certs/ca.pem"\n  \n  # Certificate secret mounts\n  extraVolumes:\n    - name: vk-tls-certs\n      secret:\n        secretName: vk-tls-certs\n  \n  extraVolumeMounts:\n    - name: vk-tls-certs\n      mountPath: /etc/vk/certs\n      readOnly: true\n'})}),"\n",(0,t.jsx)(n.h4,{id:"create-kubernetes-secrets-for-certificates",children:"Create Kubernetes Secrets for Certificates"}),"\n",(0,t.jsx)(n.p,{children:"Before deploying the Helm chart, create the necessary secrets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create namespace\nkubectl create namespace interlink\n\n# Create secret with client certificates for Virtual Kubelet\nkubectl create secret generic vk-tls-certs \\\n  --from-file=ca.pem=$HOME/.interlink/certs/ca.pem \\\n  --from-file=client-cert.pem=$HOME/.interlink/certs/client-cert.pem \\\n  --from-file=client-key.pem=$HOME/.interlink/certs/client-key.pem \\\n  -n interlink\n"})}),"\n",(0,t.jsx)(n.h4,{id:"mtls-security-considerations",children:"mTLS Security Considerations"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Certificate Management:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Implement regular certificate rotation for production deployments"}),"\n",(0,t.jsx)(n.li,{children:"Store private keys securely with restricted file permissions (600)"}),"\n",(0,t.jsx)(n.li,{children:"Keep CA private key highly secure and consider using a proper PKI solution"}),"\n",(0,t.jsx)(n.li,{children:"Monitor certificate expiration dates"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Network Security:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Example firewall configuration\nsudo ufw allow from <kubernetes-cluster-cidr> to any port 3000 comment "interLink mTLS API"\nsudo ufw deny 3000 comment "Block public access to interLink API"\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Certificate Validation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Verify certificate details and chain\nopenssl x509 -in server-cert.pem -text -noout\nopenssl verify -CAfile ca.pem server-cert.pem\n\n# Test mTLS connection\nopenssl s_client -connect YOUR_EDGE_NODE_IP:3000 -CAfile ca.pem -cert client-cert.pem -key client-key.pem\n"})}),"\n",(0,t.jsx)(n.h4,{id:"mtls-troubleshooting",children:"mTLS Troubleshooting"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Common Issues:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Certificate verification errors"})," - Check certificate chain and CA"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permission denied"})," - Verify file permissions and paths"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Handshake failures"})," - Ensure client certificate is signed by the same CA"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Debug Commands:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check certificate chain\nopenssl verify -CAfile ca.pem client-cert.pem\n\n# Test server connectivity\ncurl -v --cacert ca.pem --cert client-cert.pem --key client-key.pem https://YOUR_EDGE_NODE_IP:3000/pinglink\n\n# Check interLink logs for TLS errors\ntail -f $HOME/.interlink/logs/interlink.log | grep -i tls\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Log Messages to Monitor:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"Loaded CA certificate for TLS client"'}),"\n",(0,t.jsx)(n.li,{children:'"mTLS enabled - requiring client certificates"'}),"\n",(0,t.jsx)(n.li,{children:'"Failed to create TLS HTTP client"'}),"\n",(0,t.jsx)(n.li,{children:'"certificate verification failed"'}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["Please fill interlink_version with the desired version.",(0,t.jsx)(n.br,{}),"\n","In alternative get the latest with:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -s https://api.github.com/repos/interlink-hq/interlink/releases/latest  | jq -r .name\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Now you are ready to start the OIDC authentication flow to generate all your\nmanifests and configuration files for the interLink components. To do so, just\nexecute the installer:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$HOME/.interlink/interlink-installer --config $HOME/.interlink/installer.yaml --output-dir $HOME/.interlink/manifests/\n"})}),"\n",(0,t.jsx)(n.p,{children:"Install Oauth2-Proxy and interLink API server services and configurations with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x $HOME/.interlink/manifests/interlink-remote.sh\n$HOME/.interlink/manifests/interlink-remote.sh install\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then start the services with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$HOME/.interlink/manifests/interlink-remote.sh start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.code,{children:"stop"})," command you can stop the service. By default logs are store in\n",(0,t.jsx)(n.code,{children:"~/.interlink/logs"}),", checkout there for any error before moving to the next\nstep."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"N.B."})," you can look the oauth2_proxy configuration parameters looking directly\ninto the ",(0,t.jsx)(n.code,{children:"interlink-remote.sh"})," script."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"N.B."})," logs (expecially if in verbose mode) can become pretty huge, consider\nto implement your favorite rotation routine for all the logs in\n",(0,t.jsx)(n.code,{children:"~/.interlink/logs/"}),"."]})}),"\n",(0,t.jsx)(n.h4,{id:"plugin-service",children:"Plugin service"}),"\n",(0,t.jsx)(n.p,{children:"Select here the featured plugin you want to try:"}),"\n",(0,t.jsxs)(s.Z,{groupId:"plugins",children:[(0,t.jsxs)(l.Z,{value:"docker",label:"Docker",default:!0,children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Offload your pods to a remote machine with Docker engine available."})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="$HOME/.interlink/config/plugin-config.yaml"',children:'## Multi user host\nSocket: "unix:///home/myusername/.interlink/.plugin.sock"\nInterlinkPort: "0"\nSidecarPort: "0"\n\nCommandPrefix: ""\nDataRootFolder: "/home/myusername/.interlink/jobs/"\nBashPath: /bin/bash\nVerboseLogging: false\nErrorsOnlyLogging: false\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"N.B."})," Depending on wheter you edge is single user or not,\nyou should know by previous steps which section to uncomment here."]}),"\n",(0,t.jsxs)(n.li,{children:["More on configuration options at\n",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-docker-plugin/blob/main/README.md",children:"official repo"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Download the ",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-docker-plugin/releases",children:"latest release"}),"\nbinary in ",(0,t.jsx)(n.code,{children:"$HOME/.interlink/bin/plugin"})," for either GPU host or CPU host (tags ending with ",(0,t.jsx)(n.code,{children:"no-GPU"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start the plugins passing the configuration that you have just created:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export INTERLINKCONFIGPATH=$HOME/.interlink/config/plugin-config.yaml\n$HOME/.interlink/bin/plugin &> $HOME/.interlink/logs/plugin.log &\necho $! > $HOME/.interlink/plugin.pid\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Check the logs in ",(0,t.jsx)(n.code,{children:"$HOME/.interlink/logs/plugin.log"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To kill and restart the process is enough:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# kill\nkill $(cat $HOME/.interlink/plugin.pid)\n\n# restart\nexport INTERLINKCONFIGPATH=$HOME/.interlink/config/plugin-config.yaml\n$HOME/.interlink/bin/plugin &> $HOME/.interlink/logs/plugin.log &\necho $! > $HOME/.interlink/plugin.pid\n"})}),"\n"]}),"\n"]}),(0,t.jsx)(n.p,{children:"Almost there! Now it's time to add this virtual node into the Kubernetes cluster!"})]}),(0,t.jsxs)(l.Z,{value:"slurm",label:"SLURM",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Offload your pods to an HPC SLURM based batch system."})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Please be sure that you have a shared filesystem area with the SLURM nodes available from the edge node. In this case our ",(0,t.jsx)(n.code,{children:"DataRootFolder"})," is ",(0,t.jsx)(n.code,{children:"$HOME/.interlink/jobs"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a configuration file (",(0,t.jsxs)(n.strong,{children:["remember to substitute ",(0,t.jsx)(n.code,{children:"/home/username/"})," with your actual home path"]}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="./interlink/manifests/plugin-config.yaml"',children:'Socket: "unix:///home/myusername/.interlink/.plugin.sock"\nInterlinkPort: "0"\nSidecarPort: "0"\n\nCommandPrefix: ""\nDataRootFolder: "/home/myusername/.interlink/jobs/"\nBashPath: /bin/bash\nVerboseLogging: false\nErrorsOnlyLogging: false\nSbatchPath: "/usr/bin/sbatch"\nScancelPath: "/usr/bin/scancel"\nSqueuePath: "/usr/bin/squeue"\nSingularityPrefix: ""\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["More on configuration options at\n",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-slurm-plugin/blob/main/README.md",children:"official repo"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Download the ",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-slurm-plugin/releases",children:"latest release"}),"\nbinary in ",(0,t.jsx)(n.code,{children:"$HOME/.interlink/bin/plugin"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export PLUGIN_VERSION=$(curl -s https://api.github.com/repos/interlink-hq/interlink-slurm-plugin/releases/latest  | jq -r .name)\nwget -O $HOME/.interlink/bin/plugin https://github.com/interlink-hq/interlink-slurm-plugin/releases/download/${PLUGIN_VERSION}/interlink-sidecar-slurm_Linux_x86_64\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start the plugins passing the configuration that you have just created:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export SLURMCONFIGPATH=$HOME/.interlink/manifests/plugin-config.yaml\n$HOME/.interlink/bin/plugin &> $HOME/.interlink/logs/plugin.log &\necho $! > $HOME/.interlink/plugin.pid\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Check the logs in ",(0,t.jsx)(n.code,{children:"$HOME/.interlink/logs/plugin.log"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To kill and restart the process is enough:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# kill\nkill $(cat $HOME/.interlink/plugin.pid)\n\n# restart\nexport SLURMCONFIGPATH=$HOME/.interlink/manifests/plugin-config.yaml\n$HOME/.interlink/bin/plugin &> $HOME/.interlink/logs/plugin.log &\necho $! > $HOME/.interlink/plugin.pid\n"})}),"\n"]}),"\n"]}),(0,t.jsx)(n.p,{children:"Almost there! Now it's time to add this virtual node into the Kubernetes cluster!"})]}),(0,t.jsxs)(l.Z,{value:"kubernetes",label:"Kubernetes",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Offload your pods to a remote Kubernetes cluster."})}),(0,t.jsx)(n.p,{children:"KUBERNETES PLUGIN IS COMING SOON! For test instructions contact us!"})]})]}),"\n",(0,t.jsx)(n.h2,{id:"systemd-service-configuration",children:"Systemd Service Configuration"}),"\n",(0,t.jsx)(n.p,{children:"For production deployments, it's recommended to manage interLink components using systemd services. This provides automatic startup, restart on failure, and proper logging."}),"\n",(0,t.jsx)(n.h3,{id:"create-system-user",children:"Create System User"}),"\n",(0,t.jsx)(n.p,{children:"First, create a dedicated system user for running interLink services:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo useradd --system --create-home --home-dir /opt/interlink --shell /bin/bash interlink\nsudo mkdir -p /opt/interlink/{bin,config,logs}\nsudo chown -R interlink:interlink /opt/interlink\n"})}),"\n",(0,t.jsx)(n.h3,{id:"copy-binaries-and-configuration",children:"Copy Binaries and Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Move your interLink components to the system directories:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Copy binaries\nsudo cp $HOME/.interlink/bin/* /opt/interlink/bin/\nsudo cp $HOME/.interlink/manifests/interlink-remote.sh /opt/interlink/bin/\nsudo chmod +x /opt/interlink/bin/*\n\n# Copy configuration files\nsudo cp $HOME/.interlink/config/* /opt/interlink/config/\nsudo cp $HOME/.interlink/manifests/*.yaml /opt/interlink/config/\n\n# Set ownership\nsudo chown -R interlink:interlink /opt/interlink\n"})}),"\n",(0,t.jsx)(n.h3,{id:"oauth2-proxy-service",children:"OAuth2 Proxy Service"}),"\n",(0,t.jsx)(n.p,{children:"Create the OAuth2 proxy systemd service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-oauth2-proxy.service"',children:"[Unit]\nDescription=OAuth2 Proxy for interLink\nAfter=network.target\nWants=network.target\n\n[Service]\nType=simple\nUser=interlink\nGroup=interlink\nWorkingDirectory=/opt/interlink\nEnvironment=OAUTH2_PROXY_CONFIG=/opt/interlink/config/oauth2-proxy.cfg\nExecStart=/opt/interlink/bin/oauth2-proxy --config=/opt/interlink/config/oauth2-proxy.cfg\nExecReload=/bin/kill -HUP $MAINPID\nRestart=always\nRestartSec=10\nStandardOutput=append:/opt/interlink/logs/oauth2-proxy.log\nStandardError=append:/opt/interlink/logs/oauth2-proxy.log\n\n# Security settings\nNoNewPrivileges=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/opt/interlink/logs /tmp\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,t.jsx)(n.h3,{id:"interlink-api-server-service",children:"interLink API Server Service"}),"\n",(0,t.jsx)(n.p,{children:"Create the interLink API server systemd service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-api.service"',children:"[Unit]\nDescription=interLink API Server\nAfter=network.target interlink-oauth2-proxy.service\nWants=network.target\nRequires=interlink-oauth2-proxy.service\n\n[Service]\nType=simple\nUser=interlink\nGroup=interlink\nWorkingDirectory=/opt/interlink\nEnvironment=INTERLINKCONFIGPATH=/opt/interlink/config/InterLinkConfig.yaml\nExecStart=/opt/interlink/bin/interlink\nExecReload=/bin/kill -HUP $MAINPID\nRestart=always\nRestartSec=10\nStandardOutput=append:/opt/interlink/logs/interlink-api.log\nStandardError=append:/opt/interlink/logs/interlink-api.log\n\n# Security settings\nNoNewPrivileges=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/opt/interlink/logs /opt/interlink/jobs /tmp\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,t.jsx)(n.h3,{id:"plugin-service-1",children:"Plugin Service"}),"\n",(0,t.jsx)(n.p,{children:"Create the plugin systemd service (example for Docker plugin):"}),"\n",(0,t.jsxs)(s.Z,{groupId:"plugins",children:[(0,t.jsx)(l.Z,{value:"docker",label:"Docker Plugin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-docker-plugin.service"',children:"[Unit]\nDescription=interLink Docker Plugin\nAfter=network.target docker.service interlink-api.service\nWants=network.target\nRequires=docker.service interlink-api.service\n\n[Service]\nType=simple\nUser=interlink\nGroup=interlink\nWorkingDirectory=/opt/interlink\nEnvironment=INTERLINKCONFIGPATH=/opt/interlink/config/plugin-config.yaml\nExecStart=/opt/interlink/bin/plugin\nExecReload=/bin/kill -HUP $MAINPID\nRestart=always\nRestartSec=10\nStandardOutput=append:/opt/interlink/logs/plugin.log\nStandardError=append:/opt/interlink/logs/plugin.log\n\n# Security settings\nNoNewPrivileges=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/opt/interlink/logs /opt/interlink/jobs /tmp /var/run/docker.sock\nPrivateTmp=true\n\n# Docker access\nSupplementaryGroups=docker\n\n[Install]\nWantedBy=multi-user.target\n"})})}),(0,t.jsx)(l.Z,{value:"slurm",label:"SLURM Plugin",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-slurm-plugin.service"',children:"[Unit]\nDescription=interLink SLURM Plugin\nAfter=network.target interlink-api.service\nWants=network.target\nRequires=interlink-api.service\n\n[Service]\nType=simple\nUser=interlink\nGroup=interlink\nWorkingDirectory=/opt/interlink\nEnvironment=SLURMCONFIGPATH=/opt/interlink/config/plugin-config.yaml\nExecStart=/opt/interlink/bin/plugin\nExecReload=/bin/kill -HUP $MAINPID\nRestart=always\nRestartSec=10\nStandardOutput=append:/opt/interlink/logs/plugin.log\nStandardError=append:/opt/interlink/logs/plugin.log\n\n# Security settings\nNoNewPrivileges=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/opt/interlink/logs /opt/interlink/jobs /tmp\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"log-rotation-configuration",children:"Log Rotation Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Create log rotation configuration to prevent log files from growing too large:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="/etc/logrotate.d/interlink"',children:"/opt/interlink/logs/*.log {\n    daily\n    rotate 30\n    compress\n    delaycompress\n    missingok\n    notifempty\n    postrotate\n        systemctl reload interlink-oauth2-proxy interlink-api interlink-*-plugin 2>/dev/null || true\n    endscript\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"service-management-commands",children:"Service Management Commands"}),"\n",(0,t.jsx)(n.p,{children:"Enable and start all services:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Enable services to start on boot\nsudo systemctl daemon-reload\nsudo systemctl enable interlink-oauth2-proxy interlink-api interlink-docker-plugin\n\n# Start services in order\nsudo systemctl start interlink-oauth2-proxy\nsudo systemctl start interlink-api\nsudo systemctl start interlink-docker-plugin\n\n# Check service status\nsudo systemctl status interlink-oauth2-proxy\nsudo systemctl status interlink-api\nsudo systemctl status interlink-docker-plugin\n"})}),"\n",(0,t.jsx)(n.h3,{id:"service-operations",children:"Service Operations"}),"\n",(0,t.jsx)(n.p,{children:"Common systemd operations for managing interLink services:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# View service logs\nsudo journalctl -u interlink-api -f\nsudo journalctl -u interlink-oauth2-proxy -f\nsudo journalctl -u interlink-docker-plugin -f\n\n# Restart a service\nsudo systemctl restart interlink-api\n\n# Stop all interLink services\nsudo systemctl stop interlink-docker-plugin interlink-api interlink-oauth2-proxy\n\n# Start all interLink services\nsudo systemctl start interlink-oauth2-proxy interlink-api interlink-docker-plugin\n\n# View service configuration\nsudo systemctl cat interlink-api\n"})}),"\n",(0,t.jsx)(n.h3,{id:"monitoring-and-health-checks",children:"Monitoring and Health Checks"}),"\n",(0,t.jsx)(n.p,{children:"Create a simple health check script:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="/opt/interlink/bin/health-check.sh"',children:'#!/bin/bash\n\n# Health check script for interLink services\nSOCKET_PATH="/opt/interlink/.interlink.sock"\nLOG_FILE="/opt/interlink/logs/health-check.log"\n\necho "$(date): Starting health check" >> "$LOG_FILE"\n\n# Check if socket exists and is responding\nif [ -S "$SOCKET_PATH" ]; then\n    response=$(curl -s --unix-socket "$SOCKET_PATH" http://unix/pinglink)\n    if [ $? -eq 0 ]; then\n        echo "$(date): Health check passed - $response" >> "$LOG_FILE"\n        exit 0\n    else\n        echo "$(date): Health check failed - no response from socket" >> "$LOG_FILE"\n        exit 1\n    fi\nelse\n    echo "$(date): Health check failed - socket not found" >> "$LOG_FILE"\n    exit 1\nfi\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Make executable\nsudo chmod +x /opt/interlink/bin/health-check.sh\nsudo chown interlink:interlink /opt/interlink/bin/health-check.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add a systemd timer for regular health checks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-health-check.service"',children:"[Unit]\nDescription=interLink Health Check\nAfter=interlink-api.service\nRequires=interlink-api.service\n\n[Service]\nType=oneshot\nUser=interlink\nGroup=interlink\nExecStart=/opt/interlink/bin/health-check.sh\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",metastring:'title="/etc/systemd/system/interlink-health-check.timer"',children:"[Unit]\nDescription=Run interLink Health Check every 5 minutes\nRequires=interlink-health-check.service\n\n[Timer]\nOnCalendar=*:0/5\nPersistent=true\n\n[Install]\nWantedBy=timers.target\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enable the health check timer:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl enable interlink-health-check.timer\nsudo systemctl start interlink-health-check.timer\n"})}),"\n",(0,t.jsx)(n.h3,{id:"troubleshooting-systemd-issues",children:"Troubleshooting Systemd Issues"}),"\n",(0,t.jsx)(n.p,{children:"Common troubleshooting steps:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Check service status\nsudo systemctl status interlink-api --no-pager -l\n\n# View recent logs\nsudo journalctl -u interlink-api --since "1 hour ago"\n\n# Check configuration syntax\nsudo systemd-analyze verify /etc/systemd/system/interlink-api.service\n\n# View service dependencies\nsudo systemctl list-dependencies interlink-api\n\n# Reset failed state\nsudo systemctl reset-failed interlink-api\n'})}),"\n",(0,t.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsx)(n.p,{children:"The systemd configuration includes several security features:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dedicated user"}),": Services run as non-privileged ",(0,t.jsx)(n.code,{children:"interlink"})," user"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Filesystem protection"}),": ",(0,t.jsx)(n.code,{children:"ProtectSystem"})," and ",(0,t.jsx)(n.code,{children:"ProtectHome"})," limit filesystem access"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No new privileges"}),": ",(0,t.jsx)(n.code,{children:"NoNewPrivileges"})," prevents privilege escalation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Private temp"}),": ",(0,t.jsx)(n.code,{children:"PrivateTmp"})," provides isolated temporary directories"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimal permissions"}),": ",(0,t.jsx)(n.code,{children:"ReadWritePaths"})," restricts write access to necessary directories"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For additional security, consider:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Set up firewall rules\nsudo ufw allow 30443/tcp comment "OAuth2 Proxy"\nsudo ufw allow from <kubernetes-cluster-cidr> to any port 3000 comment "interLink API"\n\n# Secure configuration files\nsudo chmod 640 /opt/interlink/config/*\nsudo chown root:interlink /opt/interlink/config/*\n'})}),"\n",(0,t.jsx)(n.h5,{id:"3rd-party-plugins",children:"3rd-party plugins"}),"\n",(0,t.jsxs)(n.p,{children:["There are more 3rd-party plugins developed that you can get inspired by or even\nuse out of the box. You can find some ref in the\n",(0,t.jsx)(n.a,{href:"../guides/deploy-interlink#attach-your-favorite-plugin-or-develop-one",children:"quick start section"})]}),"\n",(0,t.jsx)(n.h4,{id:"test-interlink-stack-health",children:"Test interLink stack health"}),"\n",(0,t.jsx)(n.p,{children:"interLink comes with a call that can be used to monitor the overall status of\nboth interlink server and plugins, at once."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"curl -v --unix-socket ${HOME}/.interlink/.interlink.sock  http://unix/pinglink\n"})}),"\n",(0,t.jsx)(n.p,{children:"This call will return the status of the system and its readiness to submit jobs."}),"\n",(0,t.jsx)(n.h3,{id:"deploy-kubernetes-components",children:"Deploy Kubernetes components"}),"\n",(0,t.jsxs)(n.p,{children:["The deployment of the Kubernetes components are managed by the official\n",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-helm-chart",children:"HELM chart"}),". The deployment steps differ based on your chosen authentication method."]}),"\n",(0,t.jsx)(n.h4,{id:"for-oidc-authentication",children:"For OIDC Authentication"}),"\n",(0,t.jsxs)(n.p,{children:["You can install the helm chart with the preconfigured (by the installer script) helm values in ",(0,t.jsx)(n.code,{children:"./interlink/manifests/values.yaml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export INTERLINK_CHART_VERSION="X.X.X"\nhelm upgrade --install \\\n  --create-namespace \\\n  -n interlink \\\n  my-node \\\n  oci://ghcr.io/interlink-hq/interlink-helm-chart/interlink \\\n  --version $INTERLINK_CHART_VERSION \\\n  --values ./.interlink/manifests/values.yaml\n'})}),"\n",(0,t.jsx)(n.h4,{id:"for-mtls-authentication",children:"For mTLS Authentication"}),"\n",(0,t.jsx)(n.p,{children:"For mTLS, create a custom values file and deploy:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create values file for mTLS\ncat > $HOME/.interlink/mtls-values.yaml << EOF\nvirtualkubelet:\n  config:\n    InterlinkURL: https://YOUR_EDGE_NODE_IP\n    InterlinkPort: "3000"\n    TLS:\n      Enabled: true\n      CertFile: "/etc/vk/certs/client-cert.pem"\n      KeyFile: "/etc/vk/certs/client-key.pem" \n      CACertFile: "/etc/vk/certs/ca.pem"\n  \n  extraVolumes:\n    - name: vk-tls-certs\n      secret:\n        secretName: vk-tls-certs\n  \n  extraVolumeMounts:\n    - name: vk-tls-certs\n      mountPath: /etc/vk/certs\n      readOnly: true\n\n  nodeSelector:\n    kubernetes.io/arch: amd64\n    kubernetes.io/os: linux\n\n  nodeName: "my-node"\n  \n  resources:\n    limits:\n      cpu: "1000m"\n      memory: "25600Mi"\n    pods: "100"\nEOF\n\n# Deploy with mTLS configuration\nexport INTERLINK_CHART_VERSION="X.X.X"\nhelm upgrade --install \\\n  --create-namespace \\\n  -n interlink \\\n  my-node \\\n  oci://ghcr.io/interlink-hq/interlink-helm-chart/interlink \\\n  --version $INTERLINK_CHART_VERSION \\\n  --values $HOME/.interlink/mtls-values.yaml\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Remember to pick the\n",(0,t.jsx)(n.a,{href:"https://github.com/interlink-hq/interlink-helm-chart/blob/main/interlink/Chart.yaml#L18",children:"version of the chart"}),"\nand put it into the ",(0,t.jsx)(n.code,{children:"INTERLINK_CHART_VERSION"})," env var above."]})}),"\n",(0,t.jsx)(n.p,{children:"Whenever you see the node ready, you are good to go!"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["You can find a demo pod to test your setup\n",(0,t.jsx)(n.a,{href:"../guides/develop-a-plugin#lets-test-is-out",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"To start debugging in case of problems we suggest starting from the pod\ncontainers logs!"})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},5162:(e,n,i)=>{i.d(n,{Z:()=>l});i(7294);var t=i(512);const r={tabItem:"tabItem_Ymn6"};var s=i(5893);function l(e){let{children:n,hidden:i,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,l),hidden:i,children:n})}},4866:(e,n,i)=>{i.d(n,{Z:()=>b});var t=i(7294),r=i(512),s=i(2466),l=i(6550),o=i(469),a=i(1980),c=i(7392),d=i(12);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:r}}=e;return{value:n,label:i,attributes:t,default:r}}))}(i);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:i}=e;const r=(0,l.k6)(),s=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,a._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,s=u(e),[l,a]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,h]=m({queryString:i,groupId:r}),[g,k]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Nk)(i);return[r,(0,t.useCallback)((e=>{i&&s.set(e)}),[i,s])]}({groupId:r}),x=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,o.Z)((()=>{x&&a(x)}),[x]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),k(e)}),[h,k,s]),tabValues:s}}var k=i(2389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=i(5893);function y(e){let{className:n,block:i,selectedValue:t,selectValue:l,tabValues:o}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const n=e.currentTarget,i=a.indexOf(n),r=o[i].value;r!==t&&(c(n),l(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=a.indexOf(e.currentTarget)+1;n=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(e.currentTarget)-1;n=a[i]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},n),children:o.map((e=>{let{value:n,label:i,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>a.push(e),onKeyDown:h,onClick:d,...s,className:(0,r.Z)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function v(e){let{lazy:n,children:i,selectedValue:r}=e;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,r.Z)("tabs-container",x.tabList),children:[(0,f.jsx)(y,{...e,...n}),(0,f.jsx)(v,{...e,...n})]})}function b(e){const n=(0,k.Z)();return(0,f.jsx)(j,{...e,children:h(e.children)},String(n))}},1151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>l});var t=i(7294);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);